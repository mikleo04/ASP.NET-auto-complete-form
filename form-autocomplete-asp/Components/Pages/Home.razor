@page "/"
@using System.ComponentModel.DataAnnotations

@code
{
    HomeModel _homeModel = new HomeModel();
    string errorMessage = "";
    string successMessgae = "";

    string GetValidationMessage(string property)
    {
        var validationResults = new List<ValidationResult>();
        var propertyInfo = typeof(HomeModel).GetProperty(property);
        if (propertyInfo != null)
        {
            var propertyValue = propertyInfo.GetValue(_homeModel);

            if (!Validator.TryValidateProperty(propertyValue, new ValidationContext(_homeModel, null, null) {MemberName = property}, validationResults))
            {
                var validationMessage = validationResults.First().ErrorMessage;
                if (validationMessage != null) return validationMessage;
            }
        }

        return null!;
    }

    void HandleSubmit()
    {
        if (Validator.TryValidateObject(_homeModel, new ValidationContext(_homeModel, null, null), null))
        {
            successMessgae = "Form Berhasil";
            _homeModel = new HomeModel();
        }
        else
        {
            errorMessage = "validasi gagal";
        }
    }
    
}
<PageTitle>Home</PageTitle>

<div class="row">
    <div class="col-lg-8 mx-auto rounded border p-3">
        
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <strong>@errorMessage</strong>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        
        @if (!string.IsNullOrEmpty(successMessgae))
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>@successMessgae</strong>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        
        <form @onsubmit="HandleSubmit">
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label ">Negara</label>
                <div class="col-sm-8">
                    <input class="form-control" @bind="_homeModel.Negara" type="text" id="countryInput" name="countryInput"/>
                    <span class="text-danger">@GetValidationMessage(_homeModel.Negara)</span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label ">Pelabuhan</label>
                <div class="col-sm-8">
                    <input class="form-control" @bind="_homeModel.Pelabuhan" type="text" id="pelabuhanInput" name="pelabuhanInput"/>
                    <span class="text-danger">@GetValidationMessage(_homeModel.Pelabuhan)</span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Barang</label>
                <div class="col-sm-8">
                    <input maxlength="8" class="form-control" @bind="_homeModel.Barang" type="text" id="barang" name="barang"/>
                    <span class="text-danger">@GetValidationMessage(_homeModel.Barang)</span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label "></label>
                <div class="col-sm-8">
                    <textarea rows="6" class="form-control" @bind="_homeModel.DetailBarang" id="detailBarang" name="detailBarang"></textarea>
                    <span class="text-danger">@GetValidationMessage(_homeModel.DetailBarang)</span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label ">Harga</label>
                <div class="col-sm-8">
                    <input class="form-control" type="number" @bind="_homeModel.Harga" id="harga" name="harga"/>
                    <span class="text-danger">@GetValidationMessage(_homeModel.Harga)</span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label ">Tarif Bea Masuk</label>
                <div class="col-sm-6">
                    <input class="form-control" @bind="_homeModel.TarifBeaMasuk" id="tarif" name="tarif"/>
                    <span class="text-danger">@GetValidationMessage(_homeModel.TarifBeaMasuk!)</span>
                </div>
                <span class="col-sm-1 card bg-secondary bg-opacity-50">%</span>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label "></label>
                <div class="col-sm-8">
                    <input class="form-control" @bind="_homeModel.Result" id="result" name="result"/>
                    <span class="text-danger">@GetValidationMessage(_homeModel.Result)</span>
                </div>
            </div>
            <div class="row">
                <div class="offset-sm-4 col-sm-8">
                    <button type="submit" class="btn btn-primary">
                        Submit
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    $(document).ready(function () {
        let kd_negara;
        const BASE_URL = "https://insw-dev.ilcs.co.id/n";
        $("#countryInput").autocomplete({
            source: function (request, response) {
              const input = request.term;
              console.log(input);
             
            $.ajax({
              url: `${BASE_URL}/negara?ur_negara=${encodeURIComponent(input)}`,
              type: "GET",
              dataType: "json",
              success: function (data) {
                const suggestions = [];
                $.each(data, function (index, country) {
                  suggestions.push({value: country.name});
                  kd_negara = country.kd_negara;
                });
                response(suggestions);
              },
              error: function (xhr, status, error) {
                console.error("Error fetching countries:", error);
              }
            });
            },
            minLength: 3,
            select: function (event, ui) {
              $("#countryInput").val(ui.item.value);
              return false;
            }
        });
        
        $("#pelabuhanInput").autocomplete({
            source: function (request, response) {
              const input = request.term;
             
            $.ajax({
              url: `${BASE_URL}/pelabuhan?kd_negara=${encodeURIComponent(kd_negara)}&ur_pelabuhan=${encodeURIComponent(input)}`,
              type: "GET",
              dataType: "json",
              success: function (data) {
                const suggestions = [];
                $.each(data, function (index, harbor) {
                  suggestions.push({ value: harbor.ur_pelabuhan });
                });
                response(suggestions);
              },
              error: function (xhr, status, error) {
                console.error("Error fetching countries:", error);
              }
            });
            },
            minLength: 3,
            select: function (event, ui) {
              $("#pelabuhanInput").val(ui.item.value);
              return false;
            }
        });
        
        $("#barang").on("input", function () {
            const inputValue = $(this).val();
            if (inputValue.length >= 8) {
                $.ajax({
                    url: `${BASE_URL}/barang?hs_code=${encodeURIComponent(inputValue)}`,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        let detailBarang;
                        $.each(data, function (index, item) {
                          detailBarang = item.details;
                        });
                        const detailBarangValue = detailBarang.join('\n');
                        $("#detailBarang").val(detailBarangValue);
                    },
                    error: function (xhr, status, error) {
                        console.log("Error fetching detail barang", error);
                    }
                });
                $.ajax({
                    url: `${BASE_URL}/tarif?hs_code=${encodeURIComponent(inputValue)}`,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        let tariffData;
                       $.each(data, function (index, tariff) {
                           tariffData = tariff.rate_bea_masuk;
                       });
                     $("#tarif").val(tariffData || 0);
                    },
                    error: function (xhr, status, error) {
                        console.log("Error fetching detail barang", error);
                    }
                });
            }
        });
        
        function handleResult() {
            const harga = parseFloat($("#harga").val()) || 0;
            const tarif = parseFloat($("#tarif").val()) || 0;

            let result = harga;
            if (tarif !== 0) {
                result = harga * (tarif / 100);
            }

            $("#result").val(result);
        }
        
        $("#harga, #tarif").on("input", function() {
            handleResult();
        });
        
    });
</script>